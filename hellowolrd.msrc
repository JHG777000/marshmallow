module mymod.

 u64 myvar := 0xff.

 u64 myvar0.

 external function puts(u8* string).

 function main() returns i32.

  u64 myvar := 0xff.

  u64 i := 0.

  u64 j := 2.

  //because all new languages need to support unicode identifiers
  u64 ðŸ˜€ := 42.

  i32[] myarray := {7,7,7}.

  section helloworld.

  switch (j).

   case (0).

    puts("Hello").

    case (1).

    end case.

   end case.

   case (2).

    puts("In marshmallow you can have string literals that
          exist on more than one line,
          and they will printed as such!!!!!").

   end case.

   default.

   end default.

  end switch.

  j--.

  i := 0.

  puts("Hello").

  myvar := '\''.

 // assignments return a value
 // using ":=" as assignment, helps aviod confusion with "=="
 // you can however use assignment in a conditional
 // also due to functions' unified scope a variable can be used before its defined

  if (myvar2 := myvar) while ( i < 2 ).

   u64 myvar2 := 0xff.

   myvar := (2+2).

   if (0).

    puts("World!!!!").

   else.

    puts("\"\"\"\'\"'").

   end if.

   i++.

  end while.

  if (j) goto helloworld.

  return 0.

 end function.

end module.